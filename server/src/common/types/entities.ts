/* eslint-disable @typescript-eslint/no-namespace,@typescript-eslint/class-name-casing */

/**
 * AUTO-GENERATED FILE @ 2020-05-17 15:02:06 - DO NOT EDIT!
 *
 * This file was automatically generated by schemats v.4.5.0
 * $ schemats generate -c postgres://username:password@localhost/monitoring -t devices -t faulty_readings -t knex_migrations -t knex_migrations_lock -t notifications -t readings -t users -t users_access_keys -t users_devices -s public
 *
 */

export type device_status = 'new' | 'paired' | 'pairing' | 'reset';
export type device_type = 'hub' | 'sensor';
export type device_version = 'hub_10' | 'sensor_10';
export type notification_type = 'low_battery' | 'low_moisture';

export namespace devicesFields {
  export type id = number;
  export type room = string;
  export type test = boolean;
  export type name = string;
  export type firmware = string;
  export type address = string;
  export type last_seen_at = Date;
  export type version = device_version;
  export type status = device_status;
  export type type = device_type;
}

export interface devices {
  id: devicesFields.id;
  room?: devicesFields.room;
  test?: devicesFields.test;
  name?: devicesFields.name;
  firmware?: devicesFields.firmware;
  address?: devicesFields.address;
  last_seen_at?: devicesFields.last_seen_at;
  version: devicesFields.version;
  status: devicesFields.status;
  type: devicesFields.type;
}

export namespace faulty_readingsFields {
  export type device_id = number;
  export type timestamp = Date;
  export type moisture = number;
  export type moisture_raw = number;
  export type moisture_max = number;
  export type moisture_min = number;
  export type temperature = number;
  export type light = number;
  export type battery_voltage = number;
  export type signal = number;
  export type reading_id = number;
  export type hub_id = number;
}

export interface faulty_readings {
  device_id: faulty_readingsFields.device_id;
  timestamp: faulty_readingsFields.timestamp;
  moisture?: faulty_readingsFields.moisture;
  moisture_raw?: faulty_readingsFields.moisture_raw;
  moisture_max?: faulty_readingsFields.moisture_max;
  moisture_min?: faulty_readingsFields.moisture_min;
  temperature?: faulty_readingsFields.temperature;
  light?: faulty_readingsFields.light;
  battery_voltage?: faulty_readingsFields.battery_voltage;
  signal?: faulty_readingsFields.signal;
  reading_id?: faulty_readingsFields.reading_id;
  hub_id?: faulty_readingsFields.hub_id;
}

export namespace knex_migrationsFields {
  export type id = number;
  export type name = string;
  export type batch = number;
  export type migration_time = Date;
}

export interface knex_migrations {
  id: knex_migrationsFields.id;
  name?: knex_migrationsFields.name;
  batch?: knex_migrationsFields.batch;
  migration_time?: knex_migrationsFields.migration_time;
}

export namespace knex_migrations_lockFields {
  export type index = number;
  export type is_locked = number;
}

export interface knex_migrations_lock {
  index: knex_migrations_lockFields.index;
  is_locked?: knex_migrations_lockFields.is_locked;
}

export namespace notificationsFields {
  export type id = string;
  export type user_id = number;
  export type device_id = number;
  export type created_at = Date;
  export type sent_at = Date;
  export type type = notification_type;
  export type title = string;
  export type body = string;
}

export interface notifications {
  id: notificationsFields.id;
  user_id: notificationsFields.user_id;
  device_id?: notificationsFields.device_id;
  created_at: notificationsFields.created_at;
  sent_at?: notificationsFields.sent_at;
  type: notificationsFields.type;
  title: notificationsFields.title;
  body: notificationsFields.body;
}

export namespace readingsFields {
  export type device_id = number;
  export type timestamp = Date;
  export type moisture = number;
  export type moisture_raw = number;
  export type moisture_max = number;
  export type moisture_min = number;
  export type temperature = number;
  export type light = number;
  export type battery_voltage = number;
  export type signal = number;
  export type reading_id = number;
  export type hub_id = number;
}

export interface readings {
  device_id: readingsFields.device_id;
  timestamp: readingsFields.timestamp;
  moisture?: readingsFields.moisture;
  moisture_raw?: readingsFields.moisture_raw;
  moisture_max?: readingsFields.moisture_max;
  moisture_min?: readingsFields.moisture_min;
  temperature?: readingsFields.temperature;
  light?: readingsFields.light;
  battery_voltage?: readingsFields.battery_voltage;
  signal?: readingsFields.signal;
  reading_id?: readingsFields.reading_id;
  hub_id?: readingsFields.hub_id;
}

export namespace usersFields {
  export type id = number;
}

export interface users {
  id: usersFields.id;
}

export namespace users_access_keysFields {
  export type user_id = number;
  export type access_key = string;
  export type roles = Array<string>;
}

export interface users_access_keys {
  user_id?: users_access_keysFields.user_id;
  access_key?: users_access_keysFields.access_key;
  roles?: users_access_keysFields.roles;
}

export namespace users_devicesFields {
  export type user_id = number;
  export type device_id = number;
}

export interface users_devices {
  user_id?: users_devicesFields.user_id;
  device_id?: users_devicesFields.device_id;
}
