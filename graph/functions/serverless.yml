service: sensors

custom:
  tableName: 'sensors'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs8.10
  profile: serverless
  region: eu-west-1
  stage: dev
  memorySize: 256 # default is 1024
  versionFunctions: false
  apiKeys:
    - sensors
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: '*'
  environment:
    SENSORS_TABLE: ${self:custom.tableName}

functions:
  getReadings:
    handler: src/handler.handleGetReadings
    events:
      - http:
          path: sensor
          method: get
          private: true
          cors: true
  postReading:
    handler: src/handler.handlePostReading
    events:
      - http:
          path: sensor
          method: post
          private: true
          cors: true

resources:
  Resources:
    SensorDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: sensor_date
          AttributeType: S
        - AttributeName: sensor_type
          AttributeType: S
        KeySchema:
        - AttributeName: sensor_date
          KeyType: HASH
        GlobalSecondaryIndexes:
        - IndexName: sensor_type
          KeySchema:
          - AttributeName: sensor_type
            KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
